<%= content_for :full_width_page_header do %>
  <div class="row">
    <div class="col s12 m12 l6">
      <h1 class="text-center" style="font-size: 2rem">
        <i class="material-icons <%= Character.text_color %>"><%= Character.icon %></i>
        Welcome to the Character VizJam!
      </h1>

      <ul class="collapsible" style="margin: 0 2em">
        <li class="active">
          <div class="collapsible-header">
            <i class="material-icons pink-text">palette</i>
            <strong>Visualize your character</strong>
          </div>
          <div class="collapsible-body">
            <%= form_for basil_jam_submit_path do |f| %>
              <div class="input-field">
                <input placeholder="Nameless character" id="name" name="commission[name]" type="text">
                <label for="name">Name your character, then select their traits from the options below.</label>
              </div>

              <!-- Age radio -->
              <div style="margin-bottom: 1em">
                <div x-data="{ selectedTag: '' }">
                  <strong style="margin-right: 1em">Age</strong>
                  <% options = ['Infant', 'Child', 'Teenager', 'Young Adult', 'Adult', 'Old', 'Very Old'] %>
                  <% options.each do |option| %>
                    <label>
                      <input type="radio" name="commission[age]" value="<%= option %>" />
                      <span class="chip">
                        <%= option %>
                      </span>
                    </label>
                  <% end %>
                </div>
              </div>

              <!-- Gender radio -->
              <div style="margin-bottom: 1em">
                <strong style="margin-right: 1em">Gender</strong>
                <% options = ['Male', 'Female', 'Ambiguous', 'Transgender', 'Non-binary', 'Agender', 'Androgenous', 'Genderqueer'] %>
                <% options.each do |option| %>
                  <label>
                    <input type="radio" name="commission[gender]" value="<%= option %>" />
                    <span class="chip">
                      <%= option %>
                    </span>
                  </label>
                <% end %>
              </div>

              <!-- Build checkboxes -->
              <div style="margin-bottom: 1em">
                <strong style="margin-right: 1em">Body type</strong>
                <% options = ['Frail', 'Lean', 'Thin', 'Athletic', 'Hourglass', 'Bodybuilder', 'Rectangular', 'Muscular', 'Big-boned', 'Round', 'Pear-shaped', 'Curvy', 'Overweight', 'Underweight'] %>
                <% options.each do |option| %>
                  <label>
                    <input type="checkbox" name="commission[features][]" value="<%= option %> body" />
                    <span class="chip">
                      <%= option %>
                    </span>
                  </label>
                <% end %>
              </div>

              <!-- Hair color checkboxes -->
              <div style="margin-bottom: 1em">
                <strong style="margin-right: 1em">Hair color</strong>
                <% options = ['Blonde', 'Black', 'Brown', 'Red', 'White', 'Grey', 'Greying', 'Bald', 'Bleached', 'Blue', 'Green', 'Purple', 'Orange', 'Auburn', 'Rainbow'] %>
                <% options.each do |option| %>
                  <label>
                    <input type="checkbox" name="commission[features][]" value="<%= option %> hair color" />
                    <span class="chip">
                      <%= option %>
                    </span>
                  </label>
                <% end %>
              </div>

              <!-- Hair color checkboxes -->
              <div style="margin-bottom: 1em">
                <strong style="margin-right: 1em">Hair style</strong>
                <% options = ['Afro', 'Bald', 'Balding', 'Bob cut', 'Bowl cut', 'Bouffant', 'Braided', 'Bun', 'Buzzcut', 'Chignon', 'Combover', 'Cornrows', 'Crewcut', 'Dreadlocks', 'Emo', 'Fauxhawk', 'Feathered', 'Flattop', 'Fringe', 'Liberty Spike', 'Long', 'Short', 'Wavy', 'Straight', 'Curly', 'Mop-top', 'Parted', 'Pigtails', 'Pixie', 'Pompadour', 'Ponytail', 'Rat-tail', 'Rocker', 'Slicked back', 'Spiked'] %>
                <% options.each do |option| %>
                  <label>
                    <input type="checkbox" name="commission[features][]" value="<%= option %> hair style" />
                    <span class="chip">
                      <%= option %>
                    </span>
                  </label>
                <% end %>
              </div>

              <!-- Facial hair checkboxes -->
              <div style="margin-bottom: 1em">
                <strong style="margin-right: 1em">Facial hair</strong>
                <% options = ['Stubble', 'Patchy', 'Beard', 'Chin curtain', 'Chinstrap', 'Fu Manchu', 'Goatee', 'Mustache', 'Handlebar mustache', 'Horseshoe mustache', 'Mutton chops', 'Neckbeard', 'Sideburns', 'Soul patch'] %>
                <% options.each do |option| %>
                  <label>
                    <input type="checkbox" name="commission[features][]" value="<%= option %> facial hair" />
                    <span class="chip">
                      <%= option %>
                    </span>
                  </label>
                <% end %>
              </div>

              <!-- Eye color checkboxes -->
              <div style="margin-bottom: 1em">
                <strong style="margin-right: 1em">Eye color</strong>
                <% options = ['Amber', 'Blue', 'Indigo', 'Brown', 'Topaz', 'Grey', 'Green', 'Hazel', 'Amethyst', 'Violet', 'Red', 'Black', 'White'] %>
                <% options.each do |option| %>
                  <label>
                    <input type="checkbox" name="commission[features][]" value="<%= option %> eye color" />
                    <span class="chip">
                      <%= option %>
                    </span>
                  </label>
                <% end %>
              </div>

              <!-- Race checkboxes -->
              <div style="margin-bottom: 1em">
                <strong style="margin-right: 1em">Race</strong>
                <% options = AutocompleteService.for_field_label(content_model: Character, label: 'Race') %>
                <% options.each do |option| %>
                  <label>
                    <input type="checkbox" name="commission[features][]" value="<%= option %> race" />
                    <span class="chip">
                      <%= option %>
                    </span>
                  </label>
                <% end %>
              </div>

              <div class="center">
                <br />
                <%= f.submit 'Visualize this character', class: 'btn white-text pink' %>
              </div>
            <% end %>
          </div>
        </li>
        <li>
          <div class="collapsible-header">
            <i class="material-icons">help</i>
            How do I save my images?
          </div>
          <div class="collapsible-body">
            <p>
              To save any image, simply right click on it (or long-press if you're on mobile) and click "Save as..." to save
              it to your computer.
            </p>
            <p>
              Feel free to upload your images to their character pages on Notebook.ai if you want to show them off in a gallery
              alongside any other information you have about your character!
              <% unless user_signed_in? %>
                <%= link_to 'You can sign up for a free account here.', new_registration_path(User) %>
              <% end %>
            </p>
          </div>
        </li>
        <li>
          <div class="collapsible-header">
            <i class="material-icons">help</i>
            Who can see the images I generate?
          </div>
          <div class="collapsible-body">
            <p>
              All visualizer images are typically private by default when generated from Notebook.ai, but any images generated from this page
              for the VizJam will be public by default (and visible right below this!). The jam is meant to introduce our creatives to
              the new kinds of tools out there available for visualizing your ideas, and making everything public is a great way to
              learn what's possible from each other.
            </p>
            <p>
              Only the most recent 20 generated images are shown below, so make sure you save any images you want to keep! After they fall
              off the list, you won't see them again!
            </p>
          </div>
        </li>
        <li>
          <div class="collapsible-header">
            <i class="material-icons">help</i>
            How long will the VizJam last?
          </div>
          <div class="collapsible-body">
            <p>
              This VizJam runs from <strong>June 3rd, 2023</strong> to <strong>June 5th, 2023</strong>. You can follow
              <%= link_to '@IndentLabs on Twitter', 'https://www.twitter.com/IndentLabs', target: '_blank' %>
              or
              <%= link_to '@IndentLabs on Medium', 'https://medium.com/indent-labs', target: '_blank' %>
              to know when the next VizJam will be!
            </p>
          </div>
        </li>
      </ul>
    </div>

    <div class="col s12 m12 l6">
      <h2 style="font-size: 1.4rem">Recent character visualizations <small>(refresh for more)</small></h2>

      <div class="row">
        <div class="col s12 cards-container">
          <% @recent_commissions.each do |commission| %>          
            <div class="hoverable card" id='card-<%= commission.job_id %>' data-complete="<%= commission.complete? %>">
              <div class="card-image">
                <%= link_to "#details-#{commission.job_id}", class: 'modal-trigger waves-effect waves-light' do %>
                  <% if commission.complete? %>
                    <%= image_tag commission.image, class: 'commission-image' %>
                  <% else %>
                    <%= image_tag image_path("placeholders/commission.png"), style: "width: 100%", class: 'commission-image' %>
                  <% end %>
                <% end %>
                <% if commission.final_settings %>
                  <span class="card-title">
                    <%= commission.final_settings&.fetch('jam_name', '') %>
                  </span>
                <% end %>
              </div>
            </div>

            <% if commission.completed_at.nil? %>
              <script>
                document.addEventListener('DOMContentLoaded', (event) => {
                  let jobId = '<%= commission.job_id %>';
                  let card = document.getElementById(`card-${jobId}`);
                  let modal = document.getElementById(`details-${jobId}`);
                  let complete = card.getAttribute('data-complete') === 'true';

                  if (!complete) {
                    console.log('job id ' + jobId + ' is not complete, queueing polling');
                    let interval = setInterval(() => {
                      console.log('polling for', jobId);
                      fetch('<%= basil_commission_info_path(commission.job_id) %>')
                        .then(response => {
                          if(!response.ok) {
                            throw new Error("HTTP error " + response.status);
                          }
                          return response.json();
                        })
                        .then(data => {
                          if (data.completed_at) {
                            console.log('job id ' + jobId + ' is complete, updating image');

                            complete = true;
                            card.setAttribute('data-complete', 'true');

                            cardImage = card.querySelector('.commission-image');
                            cardImage.src = data.image_url;

                            modalImage = modal.querySelector('.commission-image');
                            modalImage.src = data.image_url;
                            clearInterval(interval);
                          } else {
                            console.log('job id ' + jobId + ' is not complete, continuing polling');
                          }
                        })
                        .catch(error => {
                          console.log("Fetch error: " + error);
                        });
                    }, 5000);
                  }
                });
              </script>
            <% end %>

            <div id="details-<%= commission.job_id %>" class="modal">
              <div class="modal-content">
                <h4><%= commission.final_settings&.fetch('jam_name', 'Nameless character') %></h4>
                <div class="row">
                  <div class="col s12 m4 l3">
                    <% if commission.complete? %>
                      <%= link_to commission.image, target: '_blank' do %>
                        <%= image_tag commission.image, class: 'commission-image', style: 'width: 100%' %>
                      <% end %>
                      <div class="text-center" style="font-size: 0.8em">
                        Click the image to see it full-size and/or download it.
                      </div>
                    <% else %>
                      <%= image_tag image_path("placeholders/commission.png"), class: 'commission-image', style: 'width: 100%' %>
                      <div class="text-center" style="font-size: 0.8em">
                        This image is still generating...
                      </div>
                    <% end %>
                  </div>
                  <div class="col s12 m8 l9">
                    <p>
                      <%= commission.final_settings&.fetch('jam_prompt', 'prompt text') %>
                    </p>
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <a href="#!" class="modal-close waves-effect waves-green btn-flat">Close</a>
              </div>
            </div>
          <% end %>
        </div>
      </div>

    </div>
  </div>
<% end %>


<script>
function pollingData() {
  return {
    image: 'images/sample-1.jpg',
    jobId: '123', // Job id should be dynamic
    pollingInterval: null,
    init() {
      this.pollingInterval = setInterval(this.poll.bind(this), 5000); // Poll every 5 seconds
    },
    poll() {
      fetch(`/poll/${this.jobId}`)
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          if (data.image) {
            this.image = data.image;
            clearInterval(this.pollingInterval); // Stop polling if image is returned
          }
        })
        .catch(error => {
          console.error('Error:', error);
        });
    },
  }
}
</script>
