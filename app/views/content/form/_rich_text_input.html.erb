<%
  content_name = content.class.name

  field_id = "#{content_name}_#{field[:id]}"
  value ||= if content.respond_to?(field[:id].to_sym)
    value = content.send(field[:id].to_sym)
  else
    value = field[:value]
  end

  should_autocomplete = defined?(autocomplete) && !!autocomplete
  should_autosave     = defined?(autosave)     && !!autosave
%>

<% unless defined?(show_label) && !show_label %>
  <%= f.label field do %>
    <%= field[:label].present? ? field[:label] : ' ' %>
  <% end %>
<% end %>

<%
  placeholder = I18n.translate "attributes.#{content_name.downcase}.#{field[:label].downcase.gsub(/\s/, '_')}",
    scope: :serendipitous_questions,
    name: content.send('name') != "New #{content_name}" ? content.send('name') : "this #{content_name.downcase}",
    default: 'Write as little or as much as you want!'
%>

<div x-data="contentLinking()" class="relative">
  <%= hidden_field_tag "field[name]", field[:id] %>
  <%=
    text_area_tag "field[value]",
                  value,
                  class: "shadow-sm block w-full min-h-[3.5rem] focus:ring-notebook-blue focus:border-notebook-blue sm:text-sm border-0 border-l-4 border-r-4 border-gray-200 rounded-md resize-y" \
                    + " js-can-mention-pages js-autosize-textarea" \
                    + "#{' autocomplete js-autocomplete-' + field[:id].to_s if should_autocomplete}" \
                    + "#{' autosave-closest-form-on-change' if should_autosave}",
                  placeholder: placeholder,
                  rows: 2,
                  "data-enable-linking": "true"
  %>
  
  <!-- Include shared dropdown template -->
  <%= render partial: 'javascripts/content_linking_dropdown' %>
</div>

<%# todo switch to field[:options].fetch('privacy') %>
<% if field[:label].start_with?('Private') %>
  <div class="help-text show-when-focused">
    Private notes are <em>always</em> visible to only you, even if content is made public and shared.
  </div>
<% end %>

<% if defined?(autocomplete) && autocomplete && autocomplete.any? %>
  <%= content_for :javascript do %>
    $(function() {
      $('.js-autocomplete-<%= field[:id].to_s %>').autocomplete({
        source: [
          <% autocomplete.each_with_index do |autocomplete_option, index| %>
            "<%= autocomplete_option %>"<%= ',' unless index == autocomplete.length - 1 %>
          <% end %>
        ],
        minLength: 2
      });
    });
  <% end %>
<% end %>
