<%
  content_name = content.class.name

  field_id = "#{content_name}_#{field[:id]}"
  value ||= if content.respond_to?(field[:id].to_sym)
    value = content.send(field[:id].to_sym)
  else
    value = field[:value]
  end

  should_autocomplete = defined?(autocomplete) && !!autocomplete
  should_autosave     = defined?(autosave)     && !!autosave
%>

<% unless defined?(show_label) && !show_label %>
  <%= f.label field do %>
    <%= field[:label].present? ? field[:label] : ' ' %>
  <% end %>
<% end %>

<%
  placeholder = I18n.translate "attributes.#{content_name.downcase}.#{field[:label].downcase.gsub(/\s/, '_')}",
    scope: :serendipitous_questions,
    name: content.send('name') != "New #{content_name}" ? content.send('name') : "this #{content_name.downcase}",
    default: 'Write as little or as much as you want!'
%>

<div x-data="contentLinking()" class="relative">
  <%= hidden_field_tag "field[name]", field[:id] %>
  <%=
    text_area_tag "field[value]",
                  value,
                  class: "shadow-sm block w-full focus:ring-notebook-blue focus:border-notebook-blue sm:text-sm border-0 border-l-4 border-r-4 border-gray-200 rounded-md" \
                    + " js-can-mention-pages js-autosize-textarea" \
                    + "#{' autocomplete js-autocomplete-' + field[:id].to_s if should_autocomplete}" \
                    + "#{' autosave-closest-form-on-change' if should_autosave}",
                  placeholder: placeholder,
                  "data-enable-linking": "true"
  %>
  
  <!-- Dropdown for content suggestions -->
  <div x-show="showDropdown"
       x-transition:enter="transition ease-out duration-200"
       x-transition:enter-start="opacity-0 scale-95"
       x-transition:enter-end="opacity-100 scale-100"
       x-transition:leave="transition ease-in duration-150"
       x-transition:leave-start="opacity-100 scale-100"
       x-transition:leave-end="opacity-0 scale-95"
       class="linkables-dropdown-container absolute w-96 bg-white rounded-lg shadow-lg border border-gray-200"
       :style="`top: ${dropdownPosition.top}px; left: ${dropdownPosition.left}px; z-index: 9999;`">
    <div class="linkables-dropdown max-h-80 overflow-y-auto">
      <template x-for="(item, index) in filteredResults" :key="item.value">
        <div @click="selectItem(item)"
             @mousedown.prevent
             :class="{ 'bg-blue-50': index === selectedIndex }"
             class="px-4 py-3 hover:bg-gray-50 cursor-pointer border-b border-gray-100 last:border-b-0 transition-colors">
          <div class="flex items-center space-x-3">
            <div :class="[getIconColorClass(item.color), getBackgroundColor(item.color)]" 
                 class="flex-shrink-0 w-8 h-8 rounded-lg flex items-center justify-center">
              <i class="material-icons text-sm" x-text="item.icon"></i>
            </div>
            <div class="flex-1 min-w-0">
              <div class="font-medium text-gray-900 truncate" x-text="item.name"></div>
              <div class="text-xs text-gray-500" x-text="item.type"></div>
            </div>
          </div>
        </div>
      </template>
      <div x-show="filteredResults.length === 0" class="px-4 py-3 text-gray-500 text-sm">
        No matching content found
      </div>
    </div>
  </div>
</div>

<%# todo switch to field[:options].fetch('privacy') %>
<% if field[:label].start_with?('Private') %>
  <div class="help-text show-when-focused">
    Private notes are <em>always</em> visible to only you, even if content is made public and shared.
  </div>
<% end %>

<% if defined?(autocomplete) && autocomplete && autocomplete.any? %>
  <%= content_for :javascript do %>
    $(function() {
      $('.js-autocomplete-<%= field[:id].to_s %>').autocomplete({
        limit: 5,
        data: {
          <% autocomplete.each do |autocomplete_option| %>
            "<%= autocomplete_option %>": null,
          <% end %>
        }
      });
    });
  <% end %>
<% end %>
