<div class="space-y-8">
  <% category[:fields].each do |field| %>
    <div class="border-t border-gray-200 pt-6"
         data-field-id="<%= field[:id] %>"
         data-field-type="<%= field[:type] %>">

      <!-- Field label -->
      <div class="mb-2">
        <label for="<%= field[:name] %>" class="inline-flex items-center text-sm font-semibold text-gray-700">
          <%
            # Map field types to appropriate icons (matching template editor)
            icon = case field[:type]
            when 'text_area', 'textarea'
              'text_fields'
            when 'link'
              'link'
            when 'name'
              'label'
            when 'universe'
              'language'
            when 'tags'
              'local_offer'
            else
              'subject'
            end

            icon_color = case field[:type]
            when 'link'
              'text-blue-600'
            when 'name'
              'text-purple-600'
            when 'universe'
              'text-indigo-600'
            when 'tags'
              'text-green-600'
            else
              'text-gray-600'
            end
          %>
          <i class="material-icons mr-1 <%= icon_color %>" style="font-size: 16px;"><%= icon %></i>
          <%= field[:label] %>
          <% if field[:required] %>
            <span class="text-red-500 ml-1">*</span>
          <% end %>
        </label>

        <% if field[:help_text].present? %>
          <p class="mt-1 text-xs text-gray-500"><%= field[:help_text] %></p>
        <% end %>
      </div>

      <!-- Field input -->
      <div class="relative">
          <!-- Autosave status indicator -->
          <div class="absolute top-0 right-0 autosave-indicator opacity-0 pointer-events-none transition-opacity duration-200 z-10">
            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
              <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              Saved
            </span>
          </div>
          
          <%= form_for raw_content, url: FieldTypeService.form_path(field), remote: true, authenticity_token: true, html: { class: "field-form" } do |f| %>
            <%= hidden_field_tag "entity[entity_id]",   raw_content.id %>
            <%= hidden_field_tag "entity[entity_type]", raw_content.class.name %>
            
            <%=
              case field[:type]
              when 'name', 'text_area', 'textarea'
                render partial: 'content/form/rich_text_input', locals: {
                  f:            f, 
                  content:      content,
                  field:        field,
                  show_label:   false,
                  autocomplete: AutocompleteService.for_field_label(content_model: raw_content.class, label: field[:label]),
                  autosave:     true
                }
              when 'universe'
                render partial: 'content/form/field_types/universe', locals: {
                  f:         f,
                  field:     field,
                  page:      content,
                  raw_model: raw_content
                }
              when 'tags'
                render partial: 'content/form/field_types/tags', locals: {
                  f:         f,
                  field:     field,
                  page:      content,
                  raw_model: raw_content
                }
              when 'link'
                render partial: 'content/form/field_types/link', locals: {
                  f:         f,
                  field:     field,
                  page:      content,
                  raw_model: raw_content
                }
              end
            %>
          <% end %>
      </div>
    </div>
  <% end %>
</div>

<style>
.field-form input:focus,
.field-form textarea:focus {
  @apply ring-2 ring-blue-500 border-blue-500;
}

.field-form.saving input,
.field-form.saving textarea {
  @apply ring-2 ring-yellow-400 border-yellow-400;
}

.field-form.saved input,
.field-form.saved textarea {
  @apply ring-2 ring-green-400 border-green-400;
}

.field-form.error input,
.field-form.error textarea {
  @apply ring-2 ring-red-400 border-red-400;
}

.autosave-indicator.show {
  @apply opacity-100 pointer-events-auto;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Enhanced autosave feedback
  document.addEventListener('autosave:start', function(e) {
    const form = e.detail.field?.closest('.field-form');
    if (form) {
      form.classList.add('saving');
      form.classList.remove('saved', 'error');
    }
  });
  
  document.addEventListener('autosave:success', function(e) {
    const form = e.detail.field?.closest('.field-form');
    if (form) {
      form.classList.add('saved');
      form.classList.remove('saving', 'error');
      
      const indicator = form.querySelector('.autosave-indicator');
      if (indicator) {
        indicator.classList.add('show');
        setTimeout(() => {
          indicator.classList.remove('show');
        }, 2000);
      }
    }
  });
  
  document.addEventListener('autosave:error', function(e) {
    const form = e.detail.field?.closest('.field-form');
    if (form) {
      form.classList.add('error');
      form.classList.remove('saving', 'saved');
    }
  });
});
</script>